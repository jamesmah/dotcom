{"version":3,"sources":["components/molecules/Quote.tsx","pages/Quotes.tsx"],"names":["Quote","textAlign","data","useState","imageLoaded","setImageLoaded","textAlignOpposite","mq","vertical","offset","once","onLoad","src","image","to","slug","up","quote","theme","chroma","palette","dark","alpha","hex","light","Quotes","allQuotes","allArticles","filter","article","tags","some","tag","Tag","Container","Stack","gap","map","index"],"mappings":"0MAkJeA,EA1ID,SAAC,GAMR,IAAD,IALJC,iBAKI,eAJJC,EAII,EAJJA,KAKA,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAA6B,SAATL,EAAA,eAE1B,OACE,uBAKMM,IAAGC,SALT,SAUE,6BAQIJ,GACA,cAAC,IAAD,CAAUK,OAAQ,IAAKC,MAAI,EAA3B,SACE,iBAIEC,OAAQ,kBAAMN,GAAe,IAC7BO,IAAKV,EAAKW,UAIfT,GACC,qCACE,iBAWE,0BAAkBH,GAXpB,OAM4BC,EAAKW,QAOjC,iBAgBE,gCAAwBP,GAhB1B,OASML,EATN,OAUMK,EAVN,OAYMC,IAAGC,SAZT,OAaQF,EAbR,SAkBE,yBAG+B,UAATL,GAAA,cAHtB,yBAKiBK,GALjB,UAQE,iBA2BEQ,GAAE,WAAMZ,EAAKa,MA3Bf,wBAGgBd,GAHhB,QAuBmB,UAATA,EAAA,OAvBV,SA6BY,UAATA,EAAA,oBAEH,yBAIkBA,EAJlB,QASMM,IAAGS,GAAH,MATN,SAcGd,EAAKe,sB,u1BAnEM,gBAAGC,EAAH,EAAGA,MAAH,OACZC,IAAOD,EAAME,QAAQC,KAAK,IAAIC,MAAM,IAAKC,S,8mBA2BzB,gBAAGL,EAAH,EAAGA,MAAH,OACZC,IAAOD,EAAME,QAAQC,KAAK,IAAIC,MAAM,IAAKC,SAElC,qBAAGL,MAAkBE,QAAQI,MAAM,MAGjC,qBAAGN,MAAkBE,QAAQI,MAAM,M,kOAqBrC,qBAAGN,MAAkBE,QAAQI,MAAM,M,kFC9EjDC,UAtCA,WACb,IAAMC,EAAYC,IAAYC,QAAO,SAACC,GAAD,OACnCA,EAAQC,KAAKC,MAAK,SAACC,GAAD,OAASA,IAAQC,IAAIjC,YAGzC,OACE,eAACkC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAG,OAAV,SACGV,EAAUW,KAAI,SAACpB,EAAOqB,GAAR,OACb,cAAC,EAAD,CACEpC,KAAMe,EAENhB,UAAWqC,EAAQ,IAAM,EAAd,gBADNrB,EAAMF,WAKjB,0BAME,qBAAK,wBAAwB,kBAAiB,EAA9C,SACE,iBAKED,GAAE,YALJ,uC","file":"static/js/22.685a1f67.chunk.js","sourcesContent":["import chroma from \"chroma-js\"\nimport { useState } from \"react\"\nimport LazyLoad from \"react-lazyload\"\nimport { Link } from \"react-router-dom\"\nimport { css } from \"styled-components\"\nimport { ArticleData } from \"../../types\"\nimport { mq } from \"../../utils/media-query\"\n\nconst Quote = ({\n  textAlign = `left`,\n  data,\n}: {\n  textAlign: \"left\" | \"right\"\n  data: ArticleData\n}) => {\n  const [imageLoaded, setImageLoaded] = useState(false)\n\n  const textAlignOpposite = textAlign === `left` ? `right` : `left`\n\n  return (\n    <div\n      css={css`\n        position: relative;\n        padding-top: min(calc(100% / (16 / 9)), calc(100vh - 6rem));\n\n        ${mq.vertical} {\n          padding-top: min(100%, calc(100vh - 6rem));\n        }\n      `}\n    >\n      <div\n        css={`\n          position: absolute;\n          top: 0;\n          bottom: 0;\n          width: 100%;\n        `}\n      >\n        {!imageLoaded && (\n          <LazyLoad offset={500} once>\n            <img\n              css={`\n                display: none;\n              `}\n              onLoad={() => setImageLoaded(true)}\n              src={data.image}\n            />\n          </LazyLoad>\n        )}\n        {imageLoaded && (\n          <>\n            <div\n              css={css`\n                position: absolute;\n                top: 0;\n                bottom: 0;\n                width: 100%;\n                background-image: url(${data.image});\n                background-position: center;\n                background-repeat: no-repeat;\n                background-size: cover;\n              `}\n              data-aos={`fade-${textAlign}`}\n            />\n            <div\n              css={css`\n                position: absolute;\n                backdrop-filter: blur(2px);\n                background: ${({ theme }) =>\n                  chroma(theme.palette.dark[2]).alpha(0.3).hex()};\n                max-height: 80%;\n                overflow: hidden;\n                bottom: 10%;\n                ${textAlign}: 0;\n                ${textAlignOpposite}: 25%;\n\n                ${mq.vertical} {\n                  ${textAlignOpposite}: 15%;\n                }\n              `}\n              data-aos={`fade-slide-${textAlignOpposite}`}\n            >\n              <div\n                css={`\n                  display: flex;\n                  flex-direction: ${textAlign === `right` && `row-reverse`};\n                  gap: 1rem;\n                  ${`padding-${textAlignOpposite}`}: 1.5rem;\n                `}\n              >\n                <Link\n                  css={css`\n                    padding: 1rem;\n                    ${`margin-${textAlign}`}: -0.5rem;\n                    display: grid;\n                    place-items: center;\n                    background: ${({ theme }) =>\n                      chroma(theme.palette.dark[2]).alpha(0.1).hex()};\n                    font-size: 1.5rem;\n                    color: ${({ theme }) => theme.palette.light[1]};\n\n                    :hover {\n                      color: ${({ theme }) => theme.palette.light[2]};\n                    }\n\n                    &,\n                    + p {\n                      transition: transform 0.3s ease, color 0.1s;\n                    }\n\n                    :hover,\n                    :hover + p {\n                      transform: translateX(\n                        ${textAlign === `right` ? `-` : ``}0.5rem\n                      );\n                    }\n                  `}\n                  to={`/${data.slug}`}\n                >\n                  {textAlign === `right` ? `❯` : `❮`}\n                </Link>\n                <p\n                  css={css`\n                    color: ${({ theme }) => theme.palette.light[1]};\n                    font-weight: 600;\n                    text-align: ${textAlign};\n                    font-size: max(2vw, 1rem);\n                    padding-top: 0.5rem;\n                    padding-bottom: 0.5rem;\n\n                    ${mq.up(`lg`)} {\n                      font-size: 1.5rem;\n                    }\n                  `}\n                >\n                  {data.quote}\n                </p>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Quote\n","import { Link } from \"react-router-dom\"\nimport Container from \"../components/elements/Container\"\nimport Stack from \"../components/elements/Stack\"\nimport Quote from \"../components/molecules/Quote\"\nimport allArticles from \"../content/allArticles\"\nimport { Tag } from \"../types\"\n\nconst Quotes = () => {\n  const allQuotes = allArticles.filter((article) =>\n    article.tags.some((tag) => tag === Tag.Quote)\n  )\n\n  return (\n    <Container>\n      <Stack gap={`2rem`}>\n        {allQuotes.map((quote, index) => (\n          <Quote\n            data={quote}\n            key={quote.slug}\n            textAlign={index % 2 === 0 ? `right` : `left`}\n          />\n        ))}\n      </Stack>\n      <Stack\n        css={`\n          padding: 4rem 0 4rem;\n          align-items: flex-end;\n        `}\n      >\n        <div data-aos={`fade-right`} data-aos-offset={0}>\n          <Link\n            css={`\n              margin: 0 2rem;\n              font-size: 1.25rem;\n            `}\n            to={`/blog#top`}\n          >\n            Go to Blog ❯\n          </Link>\n        </div>\n      </Stack>\n    </Container>\n  )\n}\n\nexport default Quotes\n"],"sourceRoot":""}